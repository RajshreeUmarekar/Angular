{"ast":null,"code":"import { FormControl, Validators } from '@angular/forms';\nimport { v4 as uuid } from 'uuid';\nimport { DOCUMENT } from '@angular/common';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"ngx-cookie-service\";\nimport * as i3 from \"@angular/material/snack-bar\";\nimport * as i4 from \"@angular/platform-browser\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/material/button\";\nimport * as i7 from \"@angular/material/form-field\";\nimport * as i8 from \"@angular/material/input\";\nimport * as i9 from \"@angular/forms\";\nimport * as i10 from \"@angular/material/icon\";\nimport * as i11 from \"@angular/material/card\";\nfunction LoginComponent_mat_error_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.getErrorMessage());\n  }\n}\nfunction LoginComponent_mat_error_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r1.getErrorMessage());\n  }\n}\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(router, cookieService, route, snackBar, ngZone, metaService, doc, renderer) {\n      this.router = router;\n      this.cookieService = cookieService;\n      this.route = route;\n      this.snackBar = snackBar;\n      this.metaService = metaService;\n      this.doc = doc;\n      this.renderer = renderer;\n      // email = new FormControl('', [Validators.required, Validators.email]);\n      this.userid = new FormControl('', [Validators.required]);\n      this.password = new FormControl('', [Validators.required]);\n      window['GoogleSignIn'] = user => ngZone.run(() => {\n        this.afterSignUp(user);\n      });\n      window['FacebookSignIn'] = user => ngZone.run(() => {\n        this.afterSignUp(user);\n      });\n    }\n    ngOnInit() {\n      if (this.cookieService.get('authenticationToken') !== '') {\n        this.router.navigate(['tool']);\n      }\n      this.metaService.addTags([{\n        name: 'google-signin-client_id',\n        content: '770275124912-hf5jbmkukk14jqaas9naalbtoe66l3u1.apps.googleusercontent.com'\n      }]);\n      let script = this.renderer.createElement('script');\n      script.src = 'https://apis.google.com/js/platform.js';\n      script.defer = true;\n      script.async = true;\n      this.renderer.appendChild(document.body, script);\n      //Facebook logic\n      window.fbAsyncInit = function () {\n        FB.init({\n          appId: '562525844738051',\n          cookie: true,\n          xfbml: true,\n          version: 'v3.1'\n        });\n        FB.AppEvents.logPageView();\n      };\n      (function (d, s, id) {\n        var js,\n          fjs = d.getElementsByTagName(s)[0];\n        if (d.getElementById(id)) {\n          return;\n        }\n        js = d.createElement(s);\n        js.id = id;\n        js.src = \"https://connect.facebook.net/en_US/sdk.js\";\n        fjs.parentNode.insertBefore(js, fjs);\n      })(document, 'script', 'facebook-jssdk');\n    }\n    login() {\n      this.cookieService.set('authenticationToken', uuid());\n      console.log(this.route.snapshot);\n      if (this.userid.value === 'admin' && this.password.value === 'admin') {\n        this.router.navigate(['tool']);\n      } else {\n        this.displayMessage('Invalid credentials', 'center', 'top');\n      }\n    }\n    getErrorMessage() {\n      // if (this.email.hasError('required')) {\n      //   return 'You must enter a value';\n      // }\n      if (this.userid.hasError('required')) {\n        return 'You must enter a value';\n      }\n      if (this.password.hasError('required')) {\n        return 'You must enter a value';\n      }\n      // return this.email.hasError('email') ? 'Not a valid email' : '';\n    }\n\n    displayMessage(message, hpos, vpos) {\n      this.snackBar.open(message, 'Dismiss', {\n        horizontalPosition: hpos,\n        verticalPosition: vpos,\n        panelClass: ['snackBarErrorMessage']\n      });\n    }\n    afterSignUp(googleUser) {\n      this.guser = googleUser;\n    }\n    facebookLogin(facebookUser) {\n      this.fbuser = facebookUser;\n      // FB.login((response)=>\n      //     {\n      //       console.log('submitLogin',response);\n      //       if (response.authResponse)\n      //       {\n      //         this.displayMessage('login successful', 'center', 'top');\n      //       }\n      //        else\n      //        {\n      //        console.log('User login failed');\n      //      }\n      //   });\n    }\n  }\n\n  LoginComponent.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.CookieService), i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i3.MatSnackBar), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i4.Meta), i0.ɵɵdirectiveInject(DOCUMENT), i0.ɵɵdirectiveInject(i0.Renderer2));\n  };\n  LoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 34,\n    vars: 7,\n    consts: [[\"id\", \"fb-root\"], [\"fxLayout\", \"row\", \"fxLayoutAlign\", \"center center\", 1, \"login\"], [1, \"login-card\"], [1, \"title\"], [\"aria-hidden\", \"false\"], [\"id\", \"loginlbl\"], [1, \"loginform\"], [\"appearance\", \"fill\"], [\"matInput\", \"\", \"required\", \"\", 3, \"formControl\"], [4, \"ngIf\"], [\"matInput\", \"\", \"type\", \"password\", \"required\", \"\", 3, \"formControl\"], [1, \"loginbtn\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\"], [\"data-onsuccess\", \"GoogleSignIn\", \"data-width\", \"228\", \"data-theme\", \"dark\", \"data-long-title\", \"true\", 1, \"g-signin2\"], [\"id\", \"spacer\"], [\"data-onsuccess\", \"FacebookSignIn\", \"data-size\", \"large\", \"data-button-type\", \"login_with\", \"data-layout\", \"default\", \"data-auto-logout-link\", \"true\", \"data-use-continue-as\", \"true\", 1, \"fb-login-button\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1)(2, \"mat-card\", 2)(3, \"div\", 3)(4, \"mat-icon\", 4);\n        i0.ɵɵtext(5, \"collections\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"label\", 5);\n        i0.ɵɵtext(7, \"Art Gallery\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"div\", 6)(9, \"mat-icon\", 4);\n        i0.ɵɵtext(10, \"email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"mat-form-field\", 7)(12, \"mat-label\");\n        i0.ɵɵtext(13, \"Enter your user id\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(14, \"input\", 8);\n        i0.ɵɵtemplate(15, LoginComponent_mat_error_15_Template, 2, 1, \"mat-error\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(16, \"br\");\n        i0.ɵɵelementStart(17, \"mat-icon\", 4);\n        i0.ɵɵtext(18, \"lock\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"mat-form-field\", 7)(20, \"mat-label\");\n        i0.ɵɵtext(21, \"Enter your password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(22, \"input\", 10);\n        i0.ɵɵtemplate(23, LoginComponent_mat_error_23_Template, 2, 1, \"mat-error\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(24, \"br\");\n        i0.ɵɵelementStart(25, \"div\", 11)(26, \"button\", 12);\n        i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_26_listener() {\n          return ctx.login();\n        });\n        i0.ɵɵtext(27, \"Login\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(28, \"div\", 13)(29, \"p\", 14)(30, \"div\", 15);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(31, \"p\", 14);\n        i0.ɵɵtext(32);\n        i0.ɵɵpipe(33, \"json\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(14);\n        i0.ɵɵproperty(\"formControl\", ctx.userid);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.userid.invalid);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"formControl\", ctx.password);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.password.invalid);\n        i0.ɵɵadvance(9);\n        i0.ɵɵtextInterpolate1(\"\", i0.ɵɵpipeBind1(33, 5, ctx.guser), \" \");\n      }\n    },\n    dependencies: [i5.NgIf, i6.MatButton, i7.MatFormField, i7.MatLabel, i7.MatError, i8.MatInput, i9.DefaultValueAccessor, i9.NgControlStatus, i9.RequiredValidator, i9.FormControlDirective, i10.MatIcon, i11.MatCard, i5.JsonPipe],\n    styles: [\".login[_ngcontent-%COMP%]{display:flex;margin:82px auto 32px;padding:0 16px;max-width:960px;flex-direction:column;align-items:center}.title[_ngcontent-%COMP%]{display:flex;margin:15px;padding:10px}.loginform[_ngcontent-%COMP%]{margin:15px;padding:10px}.mat-icon[_ngcontent-%COMP%]{padding-right:10px}.loginbtn[_ngcontent-%COMP%]{display:grid}.mat-card[_ngcontent-%COMP%]{min-width:25vw;display:flex;flex-flow:column;align-items:center}#loginlbl[_ngcontent-%COMP%]{align-self:center;font-weight:700}.mat-raised-button.mat-primary[_ngcontent-%COMP%]{background-color:#1710a1}.snackBarErrorMessage[_ngcontent-%COMP%]{margin:50px!important;background-color:#f2dede!important;border-color:#ebccd1!important;color:#a94442!important;font-weight:700!important}#spacer[_ngcontent-%COMP%]{margin:px;line-break:anywhere}\"]\n  });\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}