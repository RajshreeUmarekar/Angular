{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nexport let RegisterComponent = class RegisterComponent {\n  constructor(router, cookieService, route, snackBar, fb) {\n    this.router = router;\n    this.cookieService = cookieService;\n    this.route = route;\n    this.snackBar = snackBar;\n    this.fb = fb;\n    this.form = new FormGroup({});\n    this.form = fb.group({\n      firstName: new FormControl('', [Validators.required]),\n      lastName: new FormControl('', [Validators.required]),\n      emailid: new FormControl('', [Validators.required, Validators.email]),\n      mobileNumber: new FormControl('', [Validators.required, Validators.pattern('[1-9]{1}[0-9]{9}')]),\n      password: new FormControl('', [Validators.required]),\n      confirm_password: new FormControl('', [Validators.required])\n    }, {\n      validator: this.ConfirmedValidator('password', 'confirm_password')\n    });\n  }\n  ngOnInit() {}\n  register() {\n    console.log(this.route.snapshot);\n  }\n  getErrorMessage(field) {\n    if (field == 'firstName') {\n      if (this.form.controls['firstName'].hasError('required')) {\n        return 'You must enter a value';\n      }\n    }\n    if (field == 'lastName') {\n      if (this.form.controls['lastName'].hasError('required')) {\n        return 'You must enter a value';\n      }\n    }\n    if (field == 'emailid') {\n      if (this.form.controls['emailid'].hasError('required')) {\n        return 'You must enter a value';\n      }\n      if (this.form.controls['emailid'].hasError('email')) {\n        return 'You must enter a valid email address';\n      }\n    }\n    if (field == 'mobileNumber') {\n      if (this.form.controls['mobileNumber'].hasError('required')) {\n        return 'You must enter a value';\n      }\n      if (this.form.controls['mobileNumber'].hasError('pattern')) {\n        return 'You must enter a 10 digit mobile number';\n      }\n    }\n    if (field == 'password') {\n      if (this.form.controls['password'].hasError('required')) {\n        return 'You must enter a value';\n      }\n    }\n    if (field == 'confirm_password') {\n      if (this.form.controls['confirm_password'].hasError('required')) {\n        return 'You must enter a value';\n      }\n      if (this.form.controls['confirm_password'].hasError('confirmedValidator')) {\n        return 'Password and Confirm Password does not match';\n      }\n    }\n  }\n  displayMessage(message, hpos, vpos) {\n    this.snackBar.open(message, 'Dismiss', {\n      horizontalPosition: hpos,\n      verticalPosition: vpos,\n      panelClass: ['snackBarErrorMessage']\n    });\n  }\n  ConfirmedValidator(controlName, matchingControlName) {\n    return formGroup => {\n      const control = formGroup.controls[controlName];\n      const matchingControl = formGroup.controls[matchingControlName];\n      if (matchingControl.errors && !matchingControl.errors.confirmedValidator) {\n        return;\n      }\n      if (control.value !== matchingControl.value) {\n        matchingControl.setErrors({\n          confirmedValidator: true\n        });\n      } else {\n        matchingControl.setErrors(null);\n      }\n    };\n  }\n};\nRegisterComponent = __decorate([Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})], RegisterComponent);","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}